{"version":3,"file":"static/js/736.fcd55214.chunk.js","mappings":"2NAkDMA,EAAaC,EAAAA,GAAAA,GAAH,6CAIhB,UAhDgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAUI,EAAd,GACrC,GAAE,CAACR,IAECG,EAYAA,EAAOM,QAAQC,QAQlB,0BACE,SAACZ,EAAD,UACGK,EAAOM,QAAQE,KAAI,SAAAC,GAAI,OACtB,2BACE,yBAAG,UAAQA,EAAKC,WAChB,yBACGD,EAAKE,QACLF,EAAKG,cAJDH,EAAKI,GADQ,SAR1B,0BACE,wBAAI,iDAbN,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,kBA0BpB,C,wMC9CDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,WAAMC,GAAN,yFACVH,EAAAA,EAAAA,IAAU,oBAAqB,CACpDG,QAAO,kBACFA,GADC,IAEJC,QAASH,MAJoB,uBACzBhB,EADyB,EACzBA,KADyB,kBAO1BA,GAP0B,2CAAH,sDAUnBoB,EAAiB,mCAAG,WAAOC,EAAOH,GAAd,yFACRH,EAAAA,EAAAA,IAAU,gBAAiB,CAChDG,QAAO,gBACLG,MAAAA,GACGH,GAFC,IAGJC,QAASH,MALkB,uBACvBhB,EADuB,EACvBA,KADuB,kBAQxBA,GARwB,2CAAH,wDAWjBsB,EAAc,mCAAG,WAAMd,GAAN,yFACLO,EAAAA,EAAAA,IAAA,iBAAoBP,GAAM,CAC/CU,OAAQ,CACNC,QAASH,KAHe,uBACpBhB,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASduB,EAAiB,mCAAG,WAAMf,GAAN,yFACRO,EAAAA,EAAAA,IAAA,iBAAoBP,EAApB,YAAkC,CACvDU,OAAQ,CACNC,QAASH,KAHkB,uBACvBhB,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,sDASjBF,EAAiB,mCAAG,WAAMU,GAAN,yFACRO,EAAAA,EAAAA,IAAA,iBAAoBP,EAApB,YAAkC,CACvDU,OAAQ,CACNC,QAASH,KAHkB,uBACvBhB,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,qD","sources":["pages/Reviews.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Blocks } from 'react-loader-spinner';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/api';\nimport styled from 'styled-components';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [rewiew, setRewiew] = useState(null);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(data => setRewiew(data));\n  }, [movieId]);\n\n  if (!rewiew) {\n    return (\n      <Blocks\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n      />\n    );\n  }\n  if (!rewiew.results.length) {\n    return (\n      <div>\n        <h3>We don't have any reviews for this movie.</h3>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <StyledList>\n        {rewiew.results.map(item => (\n          <li key={item.id}>\n            <p>Author:{item.author}</p>\n            <p>\n              {item.content}\n              {item.overview}\n            </p>\n          </li>\n        ))}\n      </StyledList>\n    </div>\n  );\n};\n\nconst StyledList = styled.ul`\n  padding: 0 100px;\n`;\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'ca7c7084b600eecae0e2f34ff34fb9e6';\n\nexport const fetchTrendingMovies = async params => {\n  const { data } = await axios.get('/trending/all/day', {\n    params: {\n      ...params,\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchSearchMovies = async (query, params) => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query,\n      ...params,\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n"],"names":["StyledList","styled","movieId","useParams","useState","rewiew","setRewiew","useEffect","fetchMovieReviews","then","data","results","length","map","item","author","content","overview","id","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","axios","API_KEY","fetchTrendingMovies","params","api_key","fetchSearchMovies","query","fetchMovieById","fetchMovieCredits"],"sourceRoot":""}