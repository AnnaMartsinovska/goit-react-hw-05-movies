{"version":3,"file":"static/js/678.dfa7bab0.chunk.js","mappings":"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","sources":["pages/MovieDetail.jsx","hooks/useHttp.jsx","services/api.js"],"sourcesContent":["import {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { fetchMovieById } from 'services/api';\nimport styled from 'styled-components';\nimport { Blocks } from 'react-loader-spinner';\nimport { useHttp } from 'hooks/useHttp';\nimport { Suspense, useRef } from 'react';\n\nconst MovieDetail = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const goBackRef = useRef(location.state?.from || '/');\n\n  const [movie] = useHttp(fetchMovieById, movieId);\n\n  if (!movie) {\n    return (\n      <Blocks\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n      />\n    );\n  }\n  return (\n    <>\n      <button>\n        <Link to={goBackRef.current}>Go back</Link>\n      </button>\n\n      <StyledWrap>\n        <StyledImg\n          src={`https://image.tmdb.org/t/p/w500${movie?.poster_path}`}\n          alt={movie.title}\n        />\n        <StyledText>\n          <h2>\n            {movie.title}\n            {movie.name} ({movie?.release_date})\n          </h2>\n          <p>User score: {(movie?.vote_average * 10).toFixed(2)}%</p>\n          <h3>Overview:</h3>\n          <p>{movie.overview}</p>\n          <h4>Genres:</h4>\n          <p>\n            {movie.genres.map(genre => (\n              <span key={genre.id}>{genre.name} </span>\n            ))}\n          </p>\n        </StyledText>\n      </StyledWrap>\n      <StyledLinks>\n        <p>Additional information:</p>\n        <NavLink to=\"cast\">Cast</NavLink>\n        <NavLink to=\"reviews\">Reviews</NavLink>\n      </StyledLinks>\n      <div>\n        <Suspense fallback={<Blocks />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nconst StyledWrap = styled.div`\n  display: flex;\n  gap: 50px;\n  margin-top: 20px;\n`;\n\nconst StyledImg = styled.img`\n  width: 300px;\n  height: auto;\n`;\n\nconst StyledText = styled.div`\n  margin-right: 100px;\n`;\n\nconst StyledLinks = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n`;\n\nexport default MovieDetail;\n","import { useEffect, useState } from 'react';\n\nexport const useHttp = (fn, param) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fn(param)\n      .then(data => setData(data))\n      .catch(error => {\n        setError(error.message);\n      });\n  }, [param, fn]);\n  return [data, setData, { error }];\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'ca7c7084b600eecae0e2f34ff34fb9e6';\n\nexport const fetchTrendingMovies = async params => {\n  const { data } = await axios.get('/trending/all/day', {\n    params: {\n      ...params,\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchSearchMovies = async (query, params) => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query,\n      ...params,\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n"],"names":["StyledWrap","styled","StyledImg","StyledText","StyledLinks","movieId","useParams","location","useLocation","goBackRef","useRef","state","from","fn","param","useState","data","setData","error","setError","useEffect","then","catch","message","useHttp","fetchMovieById","movie","to","current","src","poster_path","alt","title","name","release_date","vote_average","toFixed","overview","genres","map","genre","id","Suspense","fallback","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","axios","API_KEY","fetchTrendingMovies","params","api_key","fetchSearchMovies","query","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}