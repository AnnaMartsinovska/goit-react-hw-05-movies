{"version":3,"file":"static/js/493.3fe0b3db.chunk.js","mappings":"uMAmDA,UA9Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBN,GAASO,MAAK,SAAAC,GAC9BJ,EAAQI,EAAKL,KACd,GACF,GAAE,CAACH,IAECG,GAaH,0BACE,+BACGA,QADH,IACGA,OADH,EACGA,EAAMM,KAAI,SAAAC,GAAK,OACd,0BACGA,EAAMC,cACL,gBACEC,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAKH,EAAMI,KACXC,MAAO,MAGT,wCAGF,uBAAIL,EAAMI,QACV,yBAAG,cAAYJ,EAAMM,eAZdN,EAAMO,GADD,SAblB,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPJ,MAAM,KACNK,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,kBA0BpB,C,wMC/CDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,WAAMC,GAAN,yFACVH,EAAAA,EAAAA,IAAU,oBAAqB,CACpDG,QAAO,kBACFA,GADC,IAEJC,QAASH,MAJoB,uBACzBhB,EADyB,EACzBA,KADyB,kBAO1BA,GAP0B,2CAAH,sDAUnBoB,EAAiB,mCAAG,WAAOC,EAAOH,GAAd,yFACRH,EAAAA,EAAAA,IAAU,gBAAiB,CAChDG,QAAO,gBACLG,MAAAA,GACGH,GAFC,IAGJC,QAASH,MALkB,uBACvBhB,EADuB,EACvBA,KADuB,kBAQxBA,GARwB,2CAAH,wDAWjBsB,EAAc,mCAAG,WAAMb,GAAN,yFACLM,EAAAA,EAAAA,IAAA,iBAAoBN,GAAM,CAC/CS,OAAQ,CACNC,QAASH,KAHe,uBACpBhB,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdF,EAAiB,mCAAG,WAAMW,GAAN,yFACRM,EAAAA,EAAAA,IAAA,iBAAoBN,EAApB,YAAkC,CACvDS,OAAQ,CACNC,QAASH,KAHkB,uBACvBhB,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,sDASjBuB,EAAiB,mCAAG,WAAMd,GAAN,yFACRM,EAAAA,EAAAA,IAAA,iBAAoBN,EAApB,YAAkC,CACvDS,OAAQ,CACNC,QAASH,KAHkB,uBACvBhB,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,qD","sources":["pages/Cast.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Blocks } from 'react-loader-spinner';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'services/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    fetchMovieCredits(movieId).then(data => {\n      setCast(data.cast);\n    });\n  }, [movieId]);\n\n  if (!cast) {\n    return (\n      <Blocks\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n      />\n    );\n  }\n  return (\n    <div>\n      <ul>\n        {cast?.map(actor => (\n          <li key={actor.id}>\n            {actor.profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n                alt={actor.name}\n                width={150}\n              />\n            ) : (\n              'Sorry, the photo is not available...'\n            )}\n\n            <p>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'ca7c7084b600eecae0e2f34ff34fb9e6';\n\nexport const fetchTrendingMovies = async params => {\n  const { data } = await axios.get('/trending/all/day', {\n    params: {\n      ...params,\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchSearchMovies = async (query, params) => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query,\n      ...params,\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","fetchMovieCredits","then","data","map","actor","profile_path","src","alt","name","width","character","id","visible","height","ariaLabel","wrapperStyle","wrapperClass","axios","API_KEY","fetchTrendingMovies","params","api_key","fetchSearchMovies","query","fetchMovieById","fetchMovieReviews"],"sourceRoot":""}